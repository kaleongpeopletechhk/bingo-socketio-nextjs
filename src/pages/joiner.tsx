import React, { useEffect, useState, useRef } from "react"
import { useRouter } from "next/router"
import { io } from "socket.io-client"
import Head from 'next/head'

import Image from 'next/image'

import type { ChangeEvent } from "react"
import type { Socket } from "socket.io-client"

import { randomNumbers, checkBoard, sorting } from "../utils/bingo"

interface Props {
    socket: Socket;
    nickname: string;
  }

const Joiner: React.FC<Props> = ({ socket, nickname }) => {

    const [numbers, setNumbers] = useState<number[]>([])
    const [cartela, setCartela] = useState<number[]>([])
    const [connection, setConnection] = useState(false)
    const {query, isReady} = useRouter()

    

    const updateStatus = (obj: number[]) => {
        
        return (checker)
    }

    const room = query.room

    const checker = checkBoard(numbers, cartela, "Row") || checkBoard(numbers, cartela, "Column") || checkBoard(numbers, cartela, "Diagonal")
    
    useEffect(() => {
        if (!isReady) return;
        fetch('/api/socket')

        socket = io();

        socket.on('connect', () => {
            console.log("Connected!");

            setConnection(true)
            const n: number[] = randomNumbers();
            setNumbers( prevNumbers => [...prevNumbers, ...n])
            socket.emit("join-room", room)
        })

        socket.on('update-numbers', async (obj) => {
            

            setCartela( obj );
            console.log("Are you win? :" + await updateStatus(obj) );

        })

        return () => {
            socket.disconnect()
        }

    }, [isReady])

    

    return(
        <>
            <Head>
                <title>Bingo Game</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main >
                <div className="container mx-auto px-4 py-2">
                <div className="mx-auto w-96 ">
                    <Image width={1000} height={1000} src="/logo.jpg" alt="Logo Image" />
                </div>
                <h1 className=" text-lg font-bold text-center mb-4">Bingo Game - Welcome to room [{room}]</h1>
                <div className="flex flex-wrap justify-center items-center">
                    <div className="bg-white rounded-lg shadow-md p-2 m-2 ">
                    <h2 className="text-xl text-black font-bold mb-4 text-center">Game Board</h2>
                    <div className="grid grid-cols-5 gap-4 justify-between">
                        <div className="bg-gray-300 w-12 h-12 text-blue-300 flex justify-center items-center font-bold text-3xl  uppercase">
                            b
                        </div>
                        <div className="bg-gray-300 w-12 h-12 text-blue-300 flex justify-center items-center font-bold text-3xl 1 uppercase">
                            i
                        </div>
                        <div className="bg-gray-300 w-12 h-12 text-blue-300 flex justify-center items-center font-bold text-3xl  uppercase">
                            n
                        </div>
                        <div className="bg-gray-300 w-12 h-12 text-blue-300 flex justify-center items-center font-bold text-3xl  uppercase">
                            g
                        </div>
                        <div className="bg-gray-300 w-12 h-12 text-blue-300 flex justify-center items-center font-bold text-3xl  uppercase">
                            o
                        </div>
                        {numbers.map((number, index) => (
                        
                        (cartela.includes(number))?
                        <div
                            key={ "n" + index}
                            className="bg-orange-300 w-12 h-12  flex justify-center items-center font-bold text-3xl "
                        >
                            {number}
                        </div>
                        :<div
                            key={ "b" + index}
                            className="bg-gray-300 w-12 h-12  flex justify-center items-center font-bold text-3xl "
                        >
                            {number}
                        </div>
                        ))}
                    </div>
                    </div>
                </div>
                </div>
            </main>
        </>
    )
}

export default Joiner